name: 🚀 Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: lunch_voting_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: 🧪 Run tests
      env:
        POSTGRES_SERVER: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: lunch_voting_test
        SECRET_KEY: test-secret-key-for-ci
        ENVIRONMENT: development
      run: |
        pytest --cov=app

  deploy:
    needs: test
    runs-on: ubuntu-latest
    container: ghcr.io/railwayapp/cli:latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to Railway
      run: |
        echo "Deploying to Railway..."
        railway up --service convius_task --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: 🏥 Health Check
      run: |
        apk add --no-cache curl
        sleep 30
        curl -f ${{ vars.RAILWAY_URL }}/health || exit 1

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: 📢 Deployment Status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi 