name: üöÄ Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: lunch_voting_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üêç Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: üîß Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: üß™ Run tests
      env:
        POSTGRES_SERVER: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: lunch_voting_test
        SECRET_KEY: test-secret-key-for-ci
        ENVIRONMENT: development
      run: |
        pytest --cov=app

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üöÇ Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH

    - name: üöÄ Deploy to Railway
      run: |
        echo "Debugging Railway CLI..."
        railway --help | head -20
        
        echo "Checking login options..."
        railway login --help || echo "Login help failed"
        
        # Try environment variable approach
        export RAILWAY_TOKEN="${{ secrets.RAILWAY_TOKEN }}"
        echo "Set RAILWAY_TOKEN environment variable"
        
        # Try direct authentication
        echo "Attempting authentication..."
        railway whoami || echo "Whoami failed, trying login..."
        
        # If whoami failed, try login with token
        if ! railway whoami > /dev/null 2>&1; then
          echo "Trying login with token..."
          echo "${{ secrets.RAILWAY_TOKEN }}" | railway login || railway login --token "${{ secrets.RAILWAY_TOKEN }}" || echo "All login methods failed"
        fi
        
        echo "Final authentication check..."
        railway whoami
        
        echo "Connecting to project ${{ vars.RAILWAY_PROJECT_ID }}..."
        railway connect "${{ vars.RAILWAY_PROJECT_ID }}"
        
        echo "Deploying to Railway..."
        railway up --detach

    - name: üè• Health Check
      run: |
        sleep 30
        curl -f ${{ vars.RAILWAY_URL }}/health || exit 1

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: üì¢ Deployment Status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi 