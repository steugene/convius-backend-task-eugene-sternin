[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lunch-voting-api"
version = "1.0.0"
description = "Production-ready REST API for lunch voting system"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "pydantic>=2.4.2",
    "pydantic-settings>=2.0.3",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "psycopg2-binary>=2.9.9",
    "python-dotenv>=1.0.0",
    "python-json-logger>=2.0.7",
    "slowapi>=0.1.9",
    "prometheus-client>=0.19.0",
    "gunicorn>=21.2.0",
    "redis>=5.0.1",
    "email-validator>=2.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.1",
    "black>=23.10.1",
    "isort>=5.12.0",
    "mypy>=1.6.1",
    "flake8>=6.1.0",
    "pre-commit>=3.5.0",
]

production = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.38.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=app --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "venv/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false 